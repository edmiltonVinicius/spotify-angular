name: CI-CD-Angular-Spotify

on:
  pull_request:
    types:
      - opened
      - reopened
      - closed
      - synchronize
    branches: ["main"]

jobs:
  Build_and_Test:
    if: ${{ github.event.pull_request.state == 'open' }}
    # if: ${{ github.event.pull_request.state == 'open' || github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Angular Build
        run: npm run build

      - name: Run Tests
        run: ng test --watch=false --browsers=ChromeHeadlessCustom

  CI:
    if: github.event.pull_request.merged == true
    # needs: [Build_and_Test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      # - name: Build Docker
      #   uses: docker/build-push-action@v5.1.0
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     tags: |
      #       ${{ secrets.DOCKERHUB_USER }}/angular-spotify:${{ github.run_number }}

      # - name: Scann Trivy
      #   uses: aquasecurity/trivy-action@0.14.0
      #   with:
      #     image-ref: ${{ secrets.DOCKERHUB_USER }}/angular-spotify:${{ github.run_number }}
      #     exit-code: 1
      #     ignore-unfixed: true
      #     severity: LOW

      # - name: Docker Login - Dockerhub
      #   uses: docker/login-action@v3.0.0
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USER }}
      #     password: ${{ secrets.DOCKERHUB_PWD }}

      # - name: Push Image Docker
      #   uses: docker/build-push-action@v5.1.0
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKERHUB_USER }}/angular-spotify:latest

      - name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          build_directory: "dist"
          NETLIFY_DEPLOY_MESSAGE: "Production deploy v${{ github.ref }}"
          NETLIFY_DEPLOY_TO_PROD: true
